services:
  web:
    build: ./app
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=salon_booking
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - DEBUG=True
    depends_on:
      db:
        condition: service_healthy
      migration:
        condition: service_completed_successfully
    restart: unless-stopped
    command: python -m uvicorn app.main:app --host 0.0.0.0 --port 8000

  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=salon_booking
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  migration:
    build:
      context: .
      dockerfile: alembic/Dockerfile
    env_file:
      - .env
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=salon_booking
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    depends_on:
      db:
        condition: service_healthy
    command: [ "upgrade", "head" ]

volumes:
  postgres_data:
